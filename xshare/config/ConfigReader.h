//------------------------------------------------------------------------
// * @filename: ConfigReader.h
// *
// * @brief: 配置文件读取接口
// *
// * @author: XGM
// * @date: 2017/12/05
//------------------------------------------------------------------------
#pragma once

#include <list>
#include <stdint.h>

template<class _Result_t, class _Factory_t>
class ConfigReader
{
public:
	typedef _Result_t result_type;
	typedef _Factory_t factory_type;
public:
	virtual ~ConfigReader() {}

	//------------------------------------------------------------------------
	// 读取
	//------------------------------------------------------------------------
	virtual bool Read(const char* pBuffer, uint32_t nLength) = 0;

	//------------------------------------------------------------------------
	// 返回结果
	//------------------------------------------------------------------------
	virtual result_type GetResult(bool isRelease) = 0;

	//------------------------------------------------------------------------
	// 返回结果集
	//------------------------------------------------------------------------
	virtual std::list<result_type>* GetResults() { return nullptr; }

	//------------------------------------------------------------------------
	// 设置用于创建结果的工厂
	//------------------------------------------------------------------------
	virtual void SetFactory(factory_type f) {}
};
